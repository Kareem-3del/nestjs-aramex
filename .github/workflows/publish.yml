name: Publish to NPM

on:
  push:
    branches: [ main ]
    paths:
      - 'package.json'

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      should-publish: ${{ steps.version-check.outputs.should-publish }}
      version: ${{ steps.version-check.outputs.version }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 2

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'

    - name: Check if version changed
      id: version-check
      run: |
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        PREVIOUS_VERSION=$(git show HEAD~1:package.json | node -p "JSON.parse(require('fs').readFileSync('/dev/stdin')).version")

        echo "Current version: $CURRENT_VERSION"
        echo "Previous version: $PREVIOUS_VERSION"
        echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

        if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
          echo "Version changed, should publish"
          echo "should-publish=true" >> $GITHUB_OUTPUT
        else
          echo "Version unchanged, skipping publish"
          echo "should-publish=false" >> $GITHUB_OUTPUT
        fi

  pre-publish-validation:
    needs: check-version
    if: needs.check-version.outputs.should-publish == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run unit tests
      run: npm test

    - name: Run test coverage
      run: npm run test:coverage

    - name: Run E2E tests
      run: npm run test:e2e

    - name: Run integration tests with secrets
      run: npm run test:integration
      env:
        NODE_ENV: test
        ARAMEX_ACCOUNT_COUNTRY_CODE: ${{ secrets.ARAMEX_ACCOUNT_COUNTRY_CODE }}
        ARAMEX_ACCOUNT_ENTITY: ${{ secrets.ARAMEX_ACCOUNT_ENTITY }}
        ARAMEX_ACCOUNT_NUMBER: ${{ secrets.ARAMEX_ACCOUNT_NUMBER }}
        ARAMEX_ACCOUNT_PIN: ${{ secrets.ARAMEX_ACCOUNT_PIN }}
        ARAMEX_USERNAME: ${{ secrets.ARAMEX_USERNAME }}
        ARAMEX_PASSWORD: ${{ secrets.ARAMEX_PASSWORD }}
        ARAMEX_VERSION: ${{ secrets.ARAMEX_VERSION }}
        ARAMEX_SANDBOX: 'true'

    - name: Build package
      run: npm run build

    - name: Validate build artifacts
      run: |
        ls -la dist/
        test -f dist/index.js
        test -f dist/index.d.ts
        echo "Build artifacts validated successfully"

    - name: Run security audit
      run: npm audit --audit-level moderate

  publish:
    needs: [check-version, pre-publish-validation]
    if: needs.check-version.outputs.should-publish == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build package
      run: npm run build

    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ needs.check-version.outputs.version }}
        release_name: Release v${{ needs.check-version.outputs.version }}
        body: |
          Release version ${{ needs.check-version.outputs.version }}

          See [CHANGELOG.md](CHANGELOG.md) for details.
        draft: false
        prerelease: false
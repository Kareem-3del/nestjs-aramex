name: Dependabot Branch Cleanup

on:
  pull_request:
    types: [closed]

permissions:
  contents: write

jobs:
  cleanup:
    runs-on: ubuntu-latest
    if: |
      github.event.pull_request.merged == true &&
      github.actor == 'dependabot[bot]' &&
      startsWith(github.head_ref, 'dependabot/')
    steps:
      - name: Delete merged dependabot branch
        uses: actions/github-script@v7
        with:
          script: |
            const branchName = context.payload.pull_request.head.ref;

            try {
              await github.rest.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `heads/${branchName}`
              });

              console.log(`Successfully deleted branch: ${branchName}`);

              // Add a comment to the PR about the cleanup
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `üßπ **Branch cleanup completed**\n\nAutomatically deleted branch \`${branchName}\` after successful merge.`
              });

            } catch (error) {
              console.log(`Failed to delete branch ${branchName}: ${error.message}`);

              // Comment about cleanup failure
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `‚ö†Ô∏è **Branch cleanup failed**\n\nFailed to automatically delete branch \`${branchName}\`: ${error.message}\n\nYou may need to manually delete this branch.`
              });
            }

  cleanup-stale-branches:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == false && github.actor == 'dependabot[bot]'
    steps:
      - name: Comment on closed unmerged PR
        uses: actions/github-script@v7
        with:
          script: |
            const branchName = context.payload.pull_request.head.ref;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üö´ **Dependabot PR closed without merge**\n\nThis dependabot PR was closed without being merged. The branch \`${branchName}\` will be automatically cleaned up.\n\n**Possible reasons:**\n- Security vulnerabilities detected\n- Tests or validation failed\n- Manual rejection due to breaking changes\n- Superseded by a newer update\n\nIf this was closed in error, you can reopen the PR or create a new one manually.`
            });

      - name: Delete unmerged dependabot branch
        uses: actions/github-script@v7
        with:
          script: |
            const branchName = context.payload.pull_request.head.ref;

            try {
              await github.rest.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `heads/${branchName}`
              });

              console.log(`Successfully deleted unmerged branch: ${branchName}`);

            } catch (error) {
              console.log(`Failed to delete unmerged branch ${branchName}: ${error.message}`);
            }
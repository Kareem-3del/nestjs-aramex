name: Integration Tests

on:
  schedule:
    # Run integration tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_environment:
        description: 'Test environment'
        required: false
        default: 'sandbox'
        type: choice
        options:
        - sandbox
        - production
      test_suite:
        description: 'Test suite to run'
        required: false
        default: 'all'
        type: choice
        options:
        - all
        - tracking
        - shipping
        - rates
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'test/integration/**'

env:
  NODE_ENV: test

jobs:
  integration-tests:
    name: Aramex API Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60

    strategy:
      matrix:
        test-suite:
          - authentication
          - tracking
          - shipping
          - error-handling
          - performance
        node-version: [18.x, 20.x]
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build package
      run: npm run build

    - name: Validate Aramex credentials
      run: |
        echo "Validating Aramex configuration..."
        if [ -z "${{ secrets.ARAMEX_USERNAME }}" ]; then
          echo "❌ ARAMEX_USERNAME secret is not set"
          exit 1
        fi
        if [ -z "${{ secrets.ARAMEX_PASSWORD }}" ]; then
          echo "❌ ARAMEX_PASSWORD secret is not set"
          exit 1
        fi
        if [ -z "${{ secrets.ARAMEX_ACCOUNT_NUMBER }}" ]; then
          echo "❌ ARAMEX_ACCOUNT_NUMBER secret is not set"
          exit 1
        fi
        echo "✅ All required Aramex secrets are configured"

    - name: Run ${{ matrix.test-suite }} integration tests on Node ${{ matrix.node-version }}
      run: |
        if [ "${{ github.event.inputs.test_suite }}" != "" ] && [ "${{ github.event.inputs.test_suite }}" != "all" ] && [ "${{ github.event.inputs.test_suite }}" != "${{ matrix.test-suite }}" ]; then
          echo "Skipping ${{ matrix.test-suite }} tests as requested"
          exit 0
        fi
        npm run test:integration -- --testPathPattern="${{ matrix.test-suite }}.integration.spec.ts" --verbose --forceExit
      env:
        ARAMEX_ACCOUNT_COUNTRY_CODE: ${{ secrets.ARAMEX_ACCOUNT_COUNTRY_CODE }}
        ARAMEX_ACCOUNT_ENTITY: ${{ secrets.ARAMEX_ACCOUNT_ENTITY }}
        ARAMEX_ACCOUNT_NUMBER: ${{ secrets.ARAMEX_ACCOUNT_NUMBER }}
        ARAMEX_ACCOUNT_PIN: ${{ secrets.ARAMEX_ACCOUNT_PIN }}
        ARAMEX_USERNAME: ${{ secrets.ARAMEX_USERNAME }}
        ARAMEX_PASSWORD: ${{ secrets.ARAMEX_PASSWORD }}
        ARAMEX_VERSION: ${{ secrets.ARAMEX_VERSION }}
        ARAMEX_SANDBOX: ${{ github.event.inputs.test_environment == 'production' && 'false' || 'true' }}
        ARAMEX_TIMEOUT: '30000'
        ARAMEX_DEBUG: 'false'

    - name: Generate test report
      if: always()
      run: |
        echo "## Integration Test Results - ${{ matrix.test-suite }} (Node ${{ matrix.node-version }})" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Test Suite**: ${{ matrix.test-suite }}" >> $GITHUB_STEP_SUMMARY
        echo "**Node Version**: ${{ matrix.node-version }}" >> $GITHUB_STEP_SUMMARY
        echo "**Environment**: Sandbox" >> $GITHUB_STEP_SUMMARY
        echo "**Account**: ${{ secrets.ARAMEX_ACCOUNT_NUMBER }}" >> $GITHUB_STEP_SUMMARY
        echo "**Entity**: ${{ secrets.ARAMEX_ACCOUNT_ENTITY }}" >> $GITHUB_STEP_SUMMARY
        echo "**Country**: ${{ secrets.ARAMEX_ACCOUNT_COUNTRY_CODE }}" >> $GITHUB_STEP_SUMMARY
        echo "**Timestamp**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ $? -eq 0 ]; then
          echo "✅ ${{ matrix.test-suite }} tests **PASSED**" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ ${{ matrix.test-suite }} tests **FAILED**" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY

  api-health-check:
    name: Aramex API Health Check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build package
      run: npm run build

    - name: Run API health check
      run: node -e "
        const { testAramexAPI } = require('./test-aramex.ts');
        testAramexAPI().then(() => {
          console.log('✅ Aramex API health check passed');
          process.exit(0);
        }).catch((error) => {
          console.error('❌ Aramex API health check failed:', error.message);
          process.exit(1);
        });
      "
      env:
        ARAMEX_ACCOUNT_COUNTRY_CODE: ${{ secrets.ARAMEX_ACCOUNT_COUNTRY_CODE }}
        ARAMEX_ACCOUNT_ENTITY: ${{ secrets.ARAMEX_ACCOUNT_ENTITY }}
        ARAMEX_ACCOUNT_NUMBER: ${{ secrets.ARAMEX_ACCOUNT_NUMBER }}
        ARAMEX_ACCOUNT_PIN: ${{ secrets.ARAMEX_ACCOUNT_PIN }}
        ARAMEX_USERNAME: ${{ secrets.ARAMEX_USERNAME }}
        ARAMEX_PASSWORD: ${{ secrets.ARAMEX_PASSWORD }}
        ARAMEX_VERSION: ${{ secrets.ARAMEX_VERSION }}
        ARAMEX_SANDBOX: 'true'

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [api-health-check]

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build package
      run: npm run build

    - name: Run performance tests
      run: |
        echo "Running performance tests..."
        # Add performance testing logic here
        echo "✅ Performance tests completed"
      env:
        ARAMEX_ACCOUNT_COUNTRY_CODE: ${{ secrets.ARAMEX_ACCOUNT_COUNTRY_CODE }}
        ARAMEX_ACCOUNT_ENTITY: ${{ secrets.ARAMEX_ACCOUNT_ENTITY }}
        ARAMEX_ACCOUNT_NUMBER: ${{ secrets.ARAMEX_ACCOUNT_NUMBER }}
        ARAMEX_ACCOUNT_PIN: ${{ secrets.ARAMEX_ACCOUNT_PIN }}
        ARAMEX_USERNAME: ${{ secrets.ARAMEX_USERNAME }}
        ARAMEX_PASSWORD: ${{ secrets.ARAMEX_PASSWORD }}
        ARAMEX_VERSION: ${{ secrets.ARAMEX_VERSION }}
        ARAMEX_SANDBOX: 'true'

  notify-results:
    name: Notify Results
    runs-on: ubuntu-latest
    if: always()
    needs: [integration-tests, api-health-check, performance-tests]

    steps:
    - name: Generate summary
      run: |
        echo "## Integration Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: ${{ github.event.inputs.test_environment || 'sandbox' }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        if [ "${{ needs.integration-tests.result }}" == "success" ]; then
          echo "✅ Integration tests passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Integration tests failed" >> $GITHUB_STEP_SUMMARY
        fi

        if [ "${{ needs.api-health-check.result }}" == "success" ]; then
          echo "✅ API health check passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ API health check failed" >> $GITHUB_STEP_SUMMARY
        fi

        if [ "${{ needs.performance-tests.result }}" == "success" ]; then
          echo "✅ Performance tests passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Performance tests failed" >> $GITHUB_STEP_SUMMARY
        fi